{"version":3,"sources":["components/Person.js","components/Persons.js","components/Name.js","components/Number.js","components/PersonForm.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Person","_ref","name","number","deletePerson","react_default","a","createElement","onClick","Persons","props","persons","map","person","key","id","components_Person","Name","value","newName","onChange","handleNameChange","Number","newNumber","handleNumberChange","PersonForm","onSubmit","addName","components_Name","components_Number","type","Filter","newFilter","handleNewFilterChange","services_persons","axios","get","then","response","data","newObject","post","delete","concat","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","setMessage","useEffect","personService","initialPersons","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","nameObject","nameExists","forEach","object","window","alert","setTimeout","returnedPerson","components_Persons","filtered","filter","toLowerCase","indexOf","find","p","confirm","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.795e1536.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ name, number, deletePerson }) => {\nconst label = 'poista'\n\n  return (\n      <li>\n        {name} {number}\n        <button onClick={deletePerson}>{label}</button>\n      </li>\n  )\n}\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = (props) => {\n    return (\n        props.persons.map(person =>\n            <ul key={person.id}>\n                <Person name={person.name} number={person.number} deletePerson={() => props.deletePerson(person.id)} />\n            </ul>\n        )\n    )\n}\nexport default Persons","import React from 'react'\n\nconst Name = (props) => {\n  return (\n    <div>\n      nimi: <input\n        value={props.newName}\n        onChange={props.handleNameChange}\n      />\n    </div>\n\n  )\n}\nexport default Name","import React from 'react'\n\nconst Number = (props) => {\n  return (\n    <div>\n      numero: <input\n        value={props.newNumber}\n        onChange={props.handleNumberChange}\n      />\n    </div>\n  )\n}\nexport default Number","import React from 'react'\nimport Name from './Name'\nimport Number from './Number'\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addName}>\n        <Name\n          newName={props.newName}\n          handleNameChange={props.handleNameChange}\n        />\n        <Number\n          newNumber={props.newNumber}\n          handleNumberChange={props.handleNumberChange}\n        />\n        <button type=\"submit\">lisää</button>\n      </form>\n    </div>\n  )\n}\nexport default PersonForm","import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      rajaa näytettäviä: <input\n        type=\"text\"\n        value={props.newFilter}\n        onChange={props.handleNewFilterChange}\n      />\n    </div>\n  )\n}\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, deletePerson }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='message'>\n      {message}\n    </div>\n  )\n}\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    let nameExists = false\n    persons.forEach(function (object) {\n      if (object.name === newName) {\n        setNewName('')\n        setNewNumber('')\n        window.alert(`${newName} on jo luettelossa`)\n        nameExists = true\n      }\n    })\n    if (!nameExists) {\n      setMessage(`Lisättiin ${newName}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n\n    }\n  }\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n    const result = window.confirm(`Poistetaanko ${person.name}?`)\n    if (result) {\n      setMessage(`Poistettiin ${person.name}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n      personService.deletePerson(id)\n      setPersons(persons.filter(p => p.id !== id))\n    }\n  }\n\n  const filter = () => {\n    let filtered = persons\n    filtered = filtered.filter(person => person.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)\n    return (\n      filtered\n    )\n\n  }\n\n  const handleNewFilterChange = (event) => {\n    // console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      < Notification message={message} />\n      \n      <Filter\n        newFilter={newFilter}\n        handleNewFilterChange={handleNewFilterChange}\n      />\n\n      <h3>Lisää uusi</h3>\n\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numerot</h3>\n\n      <Persons persons={filter()} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}